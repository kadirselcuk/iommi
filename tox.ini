[tox]
envlist = py38-django{20,21,22,30,31},pypy3-django{22,30}

[testenv]
commands = {envpython} -m pytest {posargs}
deps =
    django20: Django >= 2.0, <2.1
    django21: Django >= 2.1, <2.2
    django22: Django >= 2.2, <2.3
    django30: Django >= 3.0, <3.1
    django31: Django >= 3.1, <3.2
    -rtest_requirements.txt
setenv =
    DJANGO_SETTINGS_MODULE=tests.settings
usedevelop = True
passenv = HOME

[testenv:django-with-jinja2]
setenv =
    DJANGO_SETTINGS_MODULE = tests.settings_jinja2_only
commands = {envpython} -m pytest {posargs}
deps =
    django30: Django >= 3.0, <3.1
    jinja2
    -rtest_requirements.txt
usedevelop = True
passenv = HOME


[testenv:docs]
basepython = python3.8
usedevelop = True
commands =
    make -C docs clean
    make -C docs html
whitelist_externals =
    make
    rm
deps =
    -rdocs/requirements.txt


[testenv:docs-tests]
basepython = python3.8
usedevelop = True
commands =
    python docs/make_docs_test_files.py
    python docs/misc_doc_tests.py
    python -m pytest docs/_generated_tests/ --ds=docs.settings --cov docs/_generated_tests
whitelist_externals =
    make
    rm
deps =
    -rdocs/requirements.txt
    pytest
    pytest-django
    coverage
    pytest-cov


[testenv:coverage-from-docs]
basepython = python3.8
usedevelop = True
commands =
	python docs/make_docs_test_files.py
	python -m pytest docs/_generated_tests/ --ds=docs.settings --cov iommi --cov-config=.coveragerc-docs
whitelist_externals =
    make
    rm
deps =
    -rdocs/requirements.txt
    pytest
    pytest-django
    coverage
    pytest-cov


[testenv:coverage]
setenv =
    DJANGO_SETTINGS_MODULE=tests.settings
basepython = python3.8
usedevelop = True
commands =
    {envpython} -m pytest --cov iommi --cov tests --cov-config .coveragerc {posargs}
    {envpython} -m coverage report -m
    {envpython} -m coverage html
deps =
    Django >= 2.2, <2.3
    coverage
    pytest-cov
    -rtest_requirements.txt

[testenv:lint]
basepython = python3.8
usedevelop = True
commands =
    {envpython} -m flake8 iommi examples setup.py {posargs}
deps =
    -rtest_requirements.txt

[testenv:black]
basepython = python3.8
usedevelop = True
commands =
    {envpython} -m black iommi examples setup.py {posargs}
deps =
    -rtest_requirements.txt

[testenv:venv]
envdir = venv
usedevelop = True
basepython = python3.8
commands = {posargs:python --version}
deps =
    Django >= 2.2, <2.3
    -rtest_requirements.txt
whitelist_externals =
    make


[testenv:venv_flask]
envdir = venv
usedevelop = True
basepython = python3.8
commands = {posargs:python --version}
deps =
    flask
    -rvenv_requirements.txt
whitelist_externals =
    make
